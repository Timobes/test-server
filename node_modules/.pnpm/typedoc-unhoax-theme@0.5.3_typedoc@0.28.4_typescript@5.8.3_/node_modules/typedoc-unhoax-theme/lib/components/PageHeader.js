import { i18n, JSX } from 'typedoc';
import { CrossIcon } from '../icons/cross.js';
export function PageHeader({ context }) {
    const navigationLinks = Object.entries(context.options.getValue('navigationLinks'));
    return (JSX.createElement(JSX.Fragment, null,
        JSX.createElement("dialog", { id: 'search-dialog', 
            // @ts-ignore
            popover: true },
            JSX.createElement("button", { type: 'button', class: 'close-button', 
                // @ts-ignore
                popovertarget: 'search-dialog' },
                JSX.createElement(CrossIcon, null)),
            JSX.createElement("h3", null, "Search"),
            JSX.createElement("input", { type: 'search', id: 'search-input', placeholder: 'Search\u2026' }),
            JSX.createElement("hr", null),
            JSX.createElement("div", { id: 'search-results', "data-state": 'idle' }, "Search something to see results")),
        JSX.createElement("header", { class: 'page-header' },
            JSX.createElement("h3", { class: 'site-title' },
                JSX.createElement("a", { href: context.options.getValue('titleLink') || context.relativeURL(''), class: 'header-logo' }, context.projectDisplayName)),
            JSX.createElement("div", { class: 'header-content' },
                navigationLinks.length > 0 && (JSX.createElement("div", { class: 'header-nav-links' }, navigationLinks.map(([label, url]) => (JSX.createElement("a", { href: url }, label))))),
                JSX.createElement("button", { type: 'button', 
                    // @ts-ignore
                    popovertarget: 'search-dialog' }, context.icons.search()),
                JSX.createElement("label", { for: 'mobile-nav-opened', class: 'mobile-nav-burger-trigger', "aria-label": i18n.theme_menu() }, context.icons.menu())))));
}
