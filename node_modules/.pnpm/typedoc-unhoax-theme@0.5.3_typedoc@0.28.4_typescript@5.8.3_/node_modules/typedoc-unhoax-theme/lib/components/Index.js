import { i18n, JSX } from 'typedoc';
function renderCategory(context, item, prependName = '') {
    return (JSX.createElement("section", { class: 'tsd-index-section' },
        JSX.createElement("h3", { class: 'tsd-index-heading' }, prependName ? `${prependName} - ${item.title}` : item.title),
        item.description && (JSX.createElement("div", { class: 'tsd-comment tsd-typography' },
            JSX.createElement(JSX.Raw, { html: context.markdown(item.description) }))),
        JSX.createElement("div", { class: 'tsd-index-list' }, item.children.map((item) => (JSX.createElement("a", { href: context.urlTo(item), class: ['tsd-index-link', item.isDeprecated() && 'deprecated', context.getReflectionClasses(item)]
                .filter(Boolean)
                .join(' ') },
            JSX.createElement("span", null, item.getFriendlyFullName())))))));
}
export function Index({ context, props }) {
    const groups = props.groups ?? [];
    const categories = props.categories ?? [];
    let content = categories.length
        ? categories.map((item) => renderCategory(context, item))
        : groups.flatMap((item) => {
            return item.categories
                ? item.categories.map((item2) => renderCategory(context, item2, item.title))
                : renderCategory(context, item);
        });
    content = (JSX.createElement(JSX.Fragment, null,
        JSX.createElement("h3", null, i18n.theme_index()),
        content));
    return JSX.createElement("section", { class: 'tsd-panel tsd-index-panel' }, content);
}
